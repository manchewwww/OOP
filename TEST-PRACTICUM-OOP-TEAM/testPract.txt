Реализирайте клас Човек, който се характеризира с три имена (символни низове с дължина не по-голяма от 30 символа всеки) и ЕГН.
Не позволявайте наличие на човек без поне две имена и ЕГН. Второто име може да е празно. След създаване на обекта ЕГН-то не трябва да може да се променя. В тази задача не се очаква да реализирате валидация на ЕГН, освен коректна дължина (точно 10 цифри).
Дефинирайте подходящи методи за достъп до членовете на класа.
Дефинирайте оператори == и != за сравняване на два обекта от класа за равенство (изберете подходящ критерий).


Реализирайте клас Група, който представлява множество от обекти Човек, което може да съдържа произволен брой обекти. Не трябва да има повтарящи се обекти
 (съгласно дефиницията на оператора ==).

За този клас реализирайте възможност за достъп до броя на обектите в него.
Реализирайте следните оператори:

оператори + и += с десен аргумент Човек, които добавят човека към текущата група;

оператори - и -= с десен аргумент Човек, които премахват човека от текущата група;

оператор за индексиране, който приема аргумент ЕГН (според избрания от вас тип за класа Човек) и връща псевдоним към човека с това ЕГН или хвърля подходящо изключение, ако няма такъв човек.

оператор () без аргументи, който връща броя на хората в групата.

оператор() с един аргумент от тип Човеек, който връща булева стойност и проверява дали човекът е в групата, или не.


Реализирайте клас Екип, който представлява група хора, между някои от които има йерархични взаимоотношения - ръководител-подчинен. Изберете подходящ начин за представяне на тези взаимоотношения, като имате предвид, че всеки човек може да има само един ръководител. Възможно е един ръководител да има много подчинени, както и той самият да бъде в роля подчинен спрямо друг ръководител.

Реализирайте оператор () с два аргумента от тип Човек, който задава първия си аргумент като ръководител на втория, в случай че и двамата са членове на екипа. Връща булев резултат - дали операцията е успешна. Ако вторият служител вече има зададен ръководител, той се променя.

Реализирайте оператори за наредба на два екипа, като по-голям е този екип, в който има повече ръководители (хора с поне един подчинен). 


Бонус задача (пристъпете към нея, само след като сте приключили с реализацията на основните класове!)

Реализирайте оператор за преобразуване на Екип към bool, който проверява дали екипът е коректен. За коректен ще приемаме екип, в който няма цикъл в йерархията.